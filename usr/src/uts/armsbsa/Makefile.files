#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright (c) 1992, 2010, Oracle and/or its affiliates. All rights reserved.
#
# Copyright (c) 2010, Intel Corporation.
# Copyright 2019 OmniOS Community Edition (OmniOSce) Association.
# Copyright 2020 Joyent, Inc.
# Copyright 2021 Oxide Computer Company
# Copyright 2021 Jason King
#
#	This Makefile defines file modules in the directory uts/armsbsa
#	and its children. These are the source files which are armsbsa
#	"implementation architecture" dependent.
#

#
#	object lists
#
CORE_OBJS +=			\
	acpi_stubs.o		\
	copy.o			\
	ddi_aarch64.o		\
	mlsetup.o		\
	mp_implfuncs.o		\
	mem_config_stubs.o	\
	mem_config_arch.o	\
	memnode.o		\
	lgrpplat.o		\
	cpuid.o			\
	hat_aarch64.o		\
	hat_kdi.o		\
	hment.o			\
	htable.o		\
	vm_machdep.o		\
	aarch64_mmu.o		\
	ddi_impl.o		\
	avintr.o		\
	exceptions.o		\
	swtch.o			\
	gic.o			\
	intr.o			\
	machdep.o		\
	mem_config.o		\
	trap.o			\
	mp_machdep.o		\
	mp_startup.o		\
	startup.o		\
	hardclk.o		\
	confunix.o		\
	mach_kdi.o		\
	cpupm_mach.o		\
	ppage.o			\
	dtrace_subr.o		\
	mach_sysconfig.o	\
	fakebop.o		\
	cpc_subr.o		\
	ibft.o			\
	mp_call.o		\
	cbe.o			\
	notes.o			\
	hold_page.o		\
	ssp.o			\
	bootsvcs.o		\
	memlist_new.o		\
	pci_cfgacc.o		\
	pci_cfgacc_aarch64.o	\
	pci_cfgspace.o		\
	pci_mech1.o		\
	kboot_mmu.o

# From Intel
#CORE_OBJS +=			\
#	acpi_stubs.o		\
#	biosdisk.o		\
#	bios_call.o		\
#	cbe.o			\
#	cmi.o			\
#	cmi_hw.o		\
#	cms.o			\
#	comm_page.o		\
#	confunix.o		\
#	cpu_idle.o		\
#	cpuid.o			\
#	cpuid_subr.o		\
#	cpupm.o			\
#	cpupm_mach.o		\
#	cpupm_amd.o		\
#	cpupm_intel.o		\
#	cpupm_throttle.o	\
#	cpu_acpi.o		\
#	dis_tables.o		\
#	ddi_impl.o		\
#	dvma.o			\
#	fpu_subr.o		\
#	fakebop.o		\
#	fastboot.o		\
#	fb_swtch.o		\
#	graphics.o		\
#	hardclk.o		\
#	hat_i86.o		\
#	hat_kdi.o		\
#	hma.o			\
#	hma_asm.o		\
#	hma_fpu.o		\
#	hment.o			\
#	hold_page.o		\
#	hpet_acpi.o		\
#	hrtimers.o		\
#	htable.o		\
#	hypercall.o		\
#	hypersubr.o		\
#	i86_mmu.o		\
#	ibft.o			\
#	instr_size.o		\
#	intr.o			\
#	kdi_idt.o		\
#	kdi_idthdl.o		\
#	kdi_asm.o		\
#	lgrpplat.o		\
#	mach_kdi.o		\
#	mach_sysconfig.o	\
#	machdep.o		\
#	md_clear.o		\
#	mem_config.o		\
#	mem_config_stubs.o	\
#	mem_config_arch.o	\
#	memlist_new.o		\
#	memnode.o		\
#	microcode.o		\
#	mlsetup.o		\
#	mp_call.o		\
#	mp_implfuncs.o		\
#	mp_machdep.o		\
#	mp_pc.o			\
#	mp_startup.o		\
#	memscrub.o		\
#	mpcore.o		\
#	notes.o			\
#	pci_bios.o		\
#	pci_cfgacc.o		\
#	pci_cfgacc_x86.o	\
#	pci_cfgspace.o		\
#	pci_mech1.o		\
#	pci_mech1_amd.o		\
#	pci_mech2.o		\
#	pci_neptune.o		\
#	pci_orion.o		\
#	pmem.o			\
#	ppage.o			\
#	pwrnow.o		\
#	smt.o			\
#	speedstep.o		\
#	ssp.o			\
#	startup.o		\
#	timestamp.o		\
#	todpc_subr.o		\
#	tscc_hpet.o		\
#	tscc_pit.o		\
#	tscc_vmware.o		\
#	trap.o			\
#	turbo.o			\
#	vm_machdep.o		\
#	xpv_platform.o		\
#	x_call.o

#
#	Add the SMBIOS subsystem object files directly to the list of objects
#	built into unix itself; this is all common code except for smb_dev.c.
#
CORE_OBJS += $(SMBIOS_OBJS)

#
# These get compiled twice:
# - once in the eboot (direct boot) identity mapped code
# - once for use during early startup in unix
#
BOOT_DRIVER_OBJS =		\
	boot_console.o		\
	boot_fb.o		\
	boot_keyboard.o		\
	boot_keyboard_table.o	\
	boot_mmu.o		\
	$(FONT_OBJS)
#	boot_vga.o		\
#	eboot_multiboot2.o	\

CORE_OBJS += $(BOOT_DRIVER_OBJS)

#
#	locore.o is special. It must be the first file relocated so that it
#	it is relocated just where its name implies.
#
SPECIAL_OBJS +=			\
	locore.o
#SPECIAL_OBJS +=			\
#	locore.o		\
#	fast_trap_asm.o		\
#	interrupt.o		\
#	syscall_asm_amd64.o	\
#	kpti_trampolines.o

#
# Objects that get compiled into the identity mapped PT_LOAD section of unix
# to handle the earliest part of booting.
#
#EBOOT_OBJS_32 =

#EBOOT_OBJS_64 += eboot_elfload.o

EBOOT_OBJS +=			\
	eboot_entry.o		\
	aarch64_cache.o		\
	eboot_asm.o		\
	eboot_printf.o		\
	eboot_self_reloc.o	\
	eboot_startkern.o	\
	memcpy.o		\
	memmove.o		\
	memset.o		\
	string.o		\
	$(BOOT_DRIVER_OBJS)

#EBOOT_OBJS +=			\
#	eboot_asm.o		\
#	eboot_grub.o		\
#	eboot_printf.o		\
#	eboot_startkern.o	\
#	memcpy.o		\
#	memset.o		\
#	muldiv.o		\
#	sha1.o			\
#	string.o		\
#	$(BOOT_DRIVER_OBJS)	\
#	$(EBOOT_OBJS_$(CLASS))

#
#			driver and misc modules
#
#GFX_PRIVATE_OBJS	+= gfx_private.o gfxp_pci.o gfxp_segmap.o \
#			   gfxp_devmap.o gfxp_vgatext.o gfxp_vm.o vgasubr.o \
#			   gfxp_fb.o gfxp_bitmap.o
#FIPE_OBJS += fipe_drv.o fipe_pm.o
#IOAT_OBJS += ioat.o ioat_rs.o ioat_ioctl.o ioat_chan.o
#ISANEXUS_OBJS += isa.o dma_engine.o i8237A.o
#PCIE_MISC_OBJS += pcie_acpi.o pciehpc_acpi.o pcie_x86.o
#PCI_E_NEXUS_OBJS += npe.o npe_misc.o
#PCI_E_NEXUS_OBJS += pci_common.o pci_kstats.o pci_tools.o
#PCINEXUS_OBJS += pci.o pci_common.o pci_kstats.o pci_tools.o
#PCPLUSMP_OBJS += apic.o apic_regops.o psm_common.o apic_introp.o	\
#			mp_platform_common.o mp_platform_misc.o		\
#			apic_common.o apic_timer.o
#APIX_OBJS += apix.o apic_regops.o psm_common.o apix_intr.o apix_utils.o \
#		apix_irm.o mp_platform_common.o apic_common.o \
#		apic_timer.o apix_regops.o


#ACPI_DRV_OBJS	+= acpi_drv.o acpi_video.o
#ACPINEX_OBJS	+= acpinex_drv.o acpinex_event.o

#CPUDRV_OBJS	+= \
#	cpudrv.o \
#	cpudrv_mach.o

#PPM_OBJS	+= ppm_subr.o ppm.o ppm_plat.o

#ACPIPPM_OBJS	+= acpippm.o acpisleep.o
#ACPIDEV_OBJS += acpidev_drv.o \
#	acpidev_scope.o acpidev_device.o \
#	acpidev_container.o \
#	acpidev_cpu.o \
#	acpidev_dr.o \
#	acpidev_memory.o \
#	acpidev_pci.o \
#	acpidev_resource.o \
#	acpidev_usbport.o \
#	acpidev_util.o

#DRMACH_ACPI_OBJS += drmach_acpi.o dr_util.o drmach_err.o

#DR_OBJS	+= dr.o dr_cpu.o dr_err.o dr_io.o dr_mem_acpi.o dr_quiesce.o dr_util.o

ROOTNEX_OBJS += rootnex.o
#ROOTNEX_OBJS += rootnex.o immu.o immu_dmar.o immu_dvma.o \
#		immu_intrmap.o immu_qinv.o immu_regs.o

#TZMON_OBJS	+= tzmon.o
#UPPC_OBJS += uppc.o psm_common.o
#XSVC_OBJS += xsvc.o
#AMD_IOMMU_OBJS +=	amd_iommu.o amd_iommu_impl.o amd_iommu_acpi.o \
#			amd_iommu_cmd.o amd_iommu_log.o amd_iommu_page_tables.o
#VMM_OBJS += vmm.o \
#	vmm_sol_dev.o \
#	vmm_host.o \
#	vmm_instruction_emul.o \
#	vmm_ioport.o \
#	vmm_lapic.o \
#	vmm_stat.o \
#	vmm_util.o \
#	x86.o \
#	iommu.o \
#	vatpic.o \
#	vatpit.o \
#	vhpet.o \
#	vioapic.o \
#	vlapic.o \
#	vrtc.o \
#	vpmtmr.o \
#	vmcs.o \
#	vmx_msr.o \
#	vmx.o \
#	vmx_support.o \
#	vtd.o \
#	vtd_sol.o \
#	svm.o \
#	svm_msr.o \
#	vmcb.o \
#	svm_support.o \
#	amdv.o \
#	vmm_gpt.o \
#	seg_vmm.o \
#	vmm_reservoir.o \
#	vmm_sol_glue.o \
#	vmm_sol_ept.o \
#	vmm_sol_rvi.o \
#	vmm_support.o \
#	vmm_vm.o \
#	vmm_zsd.o
#
#VIONA_OBJS += viona_main.o \
#	viona_ring.o \
#	viona_rx.o \
#	viona_tx.o \
#	viona_hook.o \

#PPT_OBJS += ppt.o

#
#	Build up defines and paths.
#
ALL_DEFS	+= -Darmsbsa
INC_PATH	+= -I$(UTSBASE)/armsbsa -I$(SRC)/common

#
# Since the assym files are derived, the dependencies must be explicit for
# all files including this file. (This is only actually required in the
# instance when the .nse_depinfo file does not exist.)
#

ASSYM_DEPS      +=		\
	copy.o			\
	desctbls_asm.o		\
	ddi_i86_asm.o		\
	exception.o		\
	fast_trap_asm.o		\
	float.o			\
	i86_subr.o		\
	interrupt.o		\
	locore.o		\
	mpcore.o		\
	sseblk.o		\
	swtch.o			\
	syscall_asm_amd64.o	\
	kpti_trampolines.o	\
	cpr_wakecode.o

#CPR_IMPL_OBJS	= cpr_impl.o	cpr_wakecode.o

$(KDI_ASSYM_DEPS:%=$(OBJS_DIR)/%):	$(DSF_DIR)/$(OBJS_DIR)/kdi_assym.h
